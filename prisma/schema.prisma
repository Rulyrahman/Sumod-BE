// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider        = "prisma-client-js"
  shadowDatabaseUrl = env("SHADOW_DATABASE_URL")
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}


model User {
  id        Int      @id @default(autoincrement())
  name      String
  email     String   @unique
  password  String
  picture   String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  refreshTokens RefreshToken[] 

  @@map("User")
}

model Product {
  id          Int      @id @default(autoincrement())
  name        String   @unique
  description String?  @db.Text
  picture     String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  @@map("Product") 
}

model RefreshToken {
  id     Int    @id @default(autoincrement())
  token  String @unique                      
  userId Int                                 
  user   User   @relation(fields: [userId], references: [id])

  @@map("RefreshToken")
}

model PasswordResetToken {
  id        Int      @id @default(autoincrement())
  email     String
  token     String
  expiresAt DateTime
  createdAt DateTime @default(now())

  @@map("PasswordResetToken")
}

model Method {
  id          Int       @id @default(autoincrement())
  name        String    @unique
  description String?   @db.Text
  picture     String?   
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
}

model VisionMission {
  id          Int      @id @default(autoincrement())
  vision      String   @db.Text
  mission     String   @db.Text
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}